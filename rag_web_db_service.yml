services:
  db:
    image: pgvector/pgvector:pg16
    container_name: rag_vector_db
    environment:
      POSTGRES_DB: ${PGDATABASE:-ragdb}
      POSTGRES_USER: ${PGUSER:-raguser}
      POSTGRES_PASSWORD: ${PGPASSWORD:-ragpassword}
    ports:
      - "${PGPORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-raguser} -d ${PGDATABASE:-ragdb}"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_web
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Outline
      OUTLINE_API_URL: ${OUTLINE_API_URL}
      OUTLINE_API_TOKEN: ${OUTLINE_API_TOKEN}
      # Models
      EMBEDDING_API_URL: ${EMBEDDING_API_URL}
      EMBEDDING_API_TOKEN: ${EMBEDDING_API_TOKEN}
      RERANKER_API_URL: ${RERANKER_API_URL}
      RERANKER_API_TOKEN: ${RERANKER_API_TOKEN}
      CHAT_API_URL: ${CHAT_API_URL}
      CHAT_API_TOKEN: ${CHAT_API_TOKEN}
      # DB
      PGHOST: db
      PGPORT: "5432"
      PGDATABASE: ${PGDATABASE:-ragdb}
      PGUSER: ${PGUSER:-raguser}
      PGPASSWORD: ${PGPASSWORD:-ragpassword}
      # RAG params
      EMBEDDING_DIM: ${EMBEDDING_DIM:-1024}
      TOP_K: ${TOP_K:-8}
      RERANK_K: ${RERANK_K:-5}
      MAX_CONTEXT_CHARS: ${MAX_CONTEXT_CHARS:-6000}
      # Server
      HOST: "0.0.0.0"
      PORT: "8080"
      BASE_PATH: "/chat"
    ports:
      - "8080:8080"

volumes:
  pgdata:
